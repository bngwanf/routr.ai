# Generated by Django 5.1.2 on 2024-10-15 17:02

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DriverTripRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('company_address', models.CharField(max_length=200)),
                ('company_name', models.CharField(max_length=255)),
                ('driver_name', models.CharField(max_length=255)),
                ('manifest', models.CharField(blank=True, max_length=255, null=True)),
                ('truck_no', models.CharField(blank=True, max_length=255, null=True)),
                ('trailer_no', models.CharField(blank=True, max_length=255, null=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('starting_mileage', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ending_mileage', models.DecimalField(decimal_places=2, max_digits=10)),
                ('starting_location', models.CharField(max_length=255)),
                ('ending_location', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FuelPurchaseRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('invoice_number', models.CharField(max_length=100)),
                ('gallons', models.DecimalField(decimal_places=2, max_digits=10)),
                ('dollar_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fuel_stop_name', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('trip_record', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fuel_purchase', to='RoutrApp.drivertriprecord')),
            ],
        ),
        migrations.CreateModel(
            name='Stop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_address', models.CharField(blank=True, max_length=255, null=True)),
                ('pallets_in', models.IntegerField(blank=True, null=True)),
                ('pallets_out', models.IntegerField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('trip_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stops', to='RoutrApp.drivertriprecord')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='customuser_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
